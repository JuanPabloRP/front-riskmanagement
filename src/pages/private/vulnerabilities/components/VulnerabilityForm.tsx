# Crear y cambiar a la nueva rama
git checkout -b feature/RM-5-1-formulario-registro-vulnerabilidades

import React, { useState } from 'react';
import { Button } from 'flowbite-react';
import RM_Input from '../../../../shared/components/RM_Input';
import RM_Select from '../../../../shared/components/RM_Select';
import { notifySuccess, notifyError } from '../../../../utils/toast';

interface VulnerabilityFormProps {
  onSubmit: (data: VulnerabilityFormData) => void;
  initialData?: VulnerabilityFormData;
}

interface VulnerabilityFormData {
  title: string;
  description: string;
  severity: string;
  impact: string;
  solution: string;
}

const VulnerabilityForm: React.FC<VulnerabilityFormProps> = ({ onSubmit, initialData }) => {
  const [formData, setFormData] = useState<VulnerabilityFormData>(initialData || {
    title: '',
    description: '',
    severity: '',
    impact: '',
    solution: ''
  });

  const severityOptions = [
    { value: 'LOW', label: 'Baja' },
    { value: 'MEDIUM', label: 'Media' },
    { value: 'HIGH', label: 'Alta' },
    { value: 'CRITICAL', label: 'Crítica' }
  ];

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    try {
      await onSubmit(formData);
      notifySuccess('Vulnerabilidad registrada exitosamente');
    } catch (error) {
      notifyError('Error al registrar la vulnerabilidad');
    }
  };

  return (
    <form onSubmit={handleSubmit} className="space-y-4 p-4">
      <h2 className="text-2xl font-bold mb-4">
        {initialData ? 'Editar' : 'Registrar'} Vulnerabilidad
      </h2>
      
      <RM_Input
        label="Título"
        value={formData.title}
        onChange={(value) => setFormData({...formData, title: value as string})}
        required
      />

      <RM_Input
        label="Descripción"
        value={formData.description}
        onChange={(value) => setFormData({...formData, description: value as string})}
        required
      />

      <RM_Select
        label="Severidad"
        value={formData.severity}
        onChange={(value) => setFormData({...formData, severity: value as string})}
        options={severityOptions}
        required
      />

      <RM_Input
        label="Impacto"
        value={formData.impact}
        onChange={(value) => setFormData({...formData, impact: value as string})}
        required
      />

      <RM_Input
        label="Solución Propuesta"
        value={formData.solution}
        onChange={(value) => setFormData({...formData, solution: value as string})}
        required
      />

      <Button type="submit">
        {initialData ? 'Actualizar' : 'Registrar'} Vulnerabilidad
      </Button>
    </form>
  );
};

export default VulnerabilityForm;
